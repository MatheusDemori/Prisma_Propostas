[DISABLE:Security]

[enumerate:list{NUM_PROPOSTA}]
    success(repository.PFPMZ_HISTORICO.ListByProposal(NUM_PROPOSTA))

[object:get{ID}]
    obj <- repository.PFPMZ_HISTORICO.GetByKey(ID)
    assertNotNull(obj,"Historico não existe")
    success(obj)

[msg:/insert{obj}]
    checkFields(obj.NUM_PROPOSTA, obj.RV_PROPOSTA, obj.MOTIVO, obj.DATA_CONTATO, obj.DATA_ENCERRAMENTO, obj.OBS,INDICE)
    assertFieldsNotEmpty([obj.NUM_PROPOSTA,obj.RV_PROPOSTA, obj.MOTIVO], "campo %field% é obrigatório")

    proposta <- repository.PFPMZ_PROPOSTA.GetByKey(obj.NUM_PROPOSTA)
    assertNotNull(proposta, "Proposta {obj.NUM_PROPOSTA} não encontrada!")
 
    revisao <- repository.PFPMZ_PROPOSTA_RV.GetByRevision(obj.NUM_PROPOSTA, obj.RV_PROPOSTA)
    assertNotNull(revisao, "Revisao {obj.NUM_PROPOSTA}-{obj.RV_PROPOSTA} não encontrada!")

    obj <- repository.PFPMZ_HISTORICO.Insert(data(obj.NUM_PROPOSTA,obj.RV_PROPOSTA,obj.MOTIVO,obj.DATA_CONTATO,obj.DATA_ENCERRAMENTO,obj.OBS,obj.INDICE))
    success("historico {obj.NUM_PROPOSTA}-{obj.RV_PROPOSTA} Inserido com sucesso!")

[msg:update{ID}{obj}]
    checkFields(obj.NUM_PROPOSTA, obj.RV_PROPOSTA, obj.MOTIVO, obj.DATA_CONTATO, obj.DATA_ENCERRAMENTO, obj.OBS,INDICE)
    assertFieldsNotEmpty([obj.NUM_PROPOSTA,obj.RV_PROPOSTA, obj.MOTIVO], "campo %field% é obrigatório")

    proposta <- repository.PFPMZ_PROPOSTA.GetByKey(obj.NUM_PROPOSTA)
    assertNotNull(proposta, "Proposta {obj.NUM_PROPOSTA} não encontrada!")
 
    revisao <- repository.PFPMZ_PROPOSTA_RV.GetByRevision(obj.NUM_PROPOSTA, obj.RV_PROPOSTA)
    assertNotNull(revisao, "Revisao {obj.NUM_PROPOSTA}-{obj.RV_PROPOSTA} não encontrada!")

    resp <- repository.PFPMZ_HISTORICO.Update(data(ID,obj.NUM_PROPOSTA,obj.RV_PROPOSTA,obj.MOTIVO,obj.DATA_CONTATO,obj.DATA_ENCERRAMENTO,obj.OBS,obj.INDICE))
    assertTrue(resp,"Historico não existe")
    success("Historico {obj.NUM_PROPOSTA}-{obj.RV_PROPOSTA} atualizado com sucesso!")

[msg:delete{ID}]
    obj <- repository.PFPMZ_HISTORICO.Delete(ID)
    assertNotNull(obj,"Historico não existe")
    success(obj)
